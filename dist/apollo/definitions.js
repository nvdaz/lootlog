"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _apolloServerExpress = require("apollo-server-express");var definitions = "directive @auth(requires: Role = USER) on FIELD_DEFINITION\n\nscalar Date\nscalar RegExp\n\nenum Role {\n  ADMIN\n  USER\n  NORMAL\n}\n\nenum DragonType {\n  SUPERIOR\n  STRONG\n  UNSTABLE\n  WISE\n  YOUNG\n  OLD\n  PROTECTOR\n}\n\nenum SlayerType {\n  REVENANT\n  TARANTULA\n  WOLF\n}\n\nenum DragonRewardType {\n  HELMET\n  CHESTPLATE\n  LEGGINGS\n  BOOTS\n  ASPECT_OF_THE_DRAGONS\n  LEGENDARY_PET\n  EPIC_PET\n  DRAGON_SCALE\n  DRAGON_CLAW\n  DRAGON_HORN\n  FRAGMENTS\n}\n\nenum SlayerRewardType {\n  SCYTHE_BLADE\n  SNAKE_RUNE\n  REVENANT_CATALYST\n  BEHEADED_HORROR\n  SMITE_VI_BOOK\n  UNDEAD_CATALYST\n  PESTILENCE_RUNE\n  FOUL_FLESH\n  REVENANT_FLESH\n\n  DIGESTED_MOSQUITO\n  TARANTULA_TALISMAN\n  FLY_SWATTER\n  BANE_VI_BOOK\n  SPIDER_CATALYST\n  BITE_RUNE\n  TOXIC_ARROW_POISON\n  TARANTULA_WEB\n\n  OVERFLUX_CAPACITOR\n  GRIZZLY_BAIT\n  RED_CLAW_EGG\n  COUTURE_RUNE\n  CRITICAL_VI_BOOK\n  SPIRIT_RUNE\n  HAMSTER_WHEEL\n  WOLF_TOOTH\n}\n\nenum GolemRewardType {\n  LEGENDARY_GOLEM_PET\n  EPIC_GOLEM_PET\n  PET_TIER_BOOST\n}\n\nenum RewardTestMode {\n  ITEM_PACKET\n  ITEM_DELTA\n  CHAT_FORMATTED\n  CHAT_UNFORMATTED\n}\n\nenum PriceType {\n  FRAGMENTS\n}\n\nenum Modifier {\n  HPB\n  ENCHANTED\n  REFORGED\n}\n\ninput DragonRewardInput {\n  reward: DragonRewardType!\n  count: Int!\n}\n\ninput SlayerRewardInput {\n  reward: SlayerRewardType!\n  count: Int!\n}\n\ninput GolemRewardInput {\n  reward: GolemRewardType!\n  count: Int!\n}\n\ninterface Reward {\n  count: Int!\n  appraisal: Int!\n}\n\ntype DragonReward {\n  reward: DragonRewardType!\n  count: Int!\n  appraisal: Int!\n}\n\ntype SlayerReward {\n  reward: SlayerRewardType!\n  count: Int!\n  appraisal: Int!\n}\n\ntype GolemReward {\n  reward: GolemRewardType!\n  count: Int!\n  appraisal: Int!\n}\n\ntype DragonFight {\n  _id: ID!\n  owner: ID!\n  dragonType: DragonType!\n  rewards: [DragonReward!]!\n  lastUpdated: Date!\n  eyesPlaced: Int!\n  day: Int\n  leaderboardPlacement: Int\n  eyePrice: Int!\n  revenue: Int!\n  gross: Int!\n}\n\ntype DragonOverview {\n  _id: ID!\n  day: Date!\n  revenue: Float!\n  gross: Float!\n  average: Int\n  dragonCount: Int!\n  dragonTypes: [DragonType!]!\n}\n\ntype SlayerTask {\n  _id: ID!\n  owner: ID!\n  slayerType: SlayerType!\n  rewards: [SlayerReward!]!\n  tier: Int!\n  revenue: Int!\n  gross: Int!\n}\n\ntype GolemFight {\n  _id: ID!\n  owner: ID!\n  rewards: [GolemReward!]!\n  revenue: Int!\n}\n\ninterface ItemProvider {\n  type: String!\n  test: RegExp!\n  mode: RewardTestMode!\n  minecraftItem: String!\n  texture: String\n  metadata: Int\n}\n\ntype DragonItemProvider implements ItemProvider {\n  type: String!\n  test: RegExp!\n  mode: RewardTestMode!\n  minecraftItem: String!\n  texture: String\n  metadata: Int\n  item: DragonRewardType!\n}\n\ntype SlayerItemProvider implements ItemProvider {\n  type: String!\n  test: RegExp!\n  mode: RewardTestMode!\n  minecraftItem: String!\n  texture: String\n  metadata: Int\n  item: SlayerRewardType!\n}\n\ntype GolemItemProvider implements ItemProvider {\n  type: String!\n  test: RegExp!\n  mode: RewardTestMode!\n  minecraftItem: String!\n  texture: String\n  metadata: Int\n  item: GolemRewardType!\n}\n\ntype AuthChallenge {\n  serverID: ID!\n  token: String!\n}\n\ntype AuthResult {\n  token: String!\n}\n\ntype SetVersionResult {\n  isCurrent: Boolean!\n  changelog: String\n}\n\ntype PriceDay {\n  date: Date!\n  price: Float!\n}\n\ntype IQR {\n  min: Float!\n  max: Float!\n  avg: Float!\n}\n\ntype Price {\n  item: String!\n  daily: [PriceDay]!\n  iqr: IQR!\n}\n\ntype DragonChance {\n  dragonType: DragonType!\n  chance: Float!\n}\n\ntype Profit {\n  date: Date!\n  profit: Float!\n}\n\ntype ModifierValue {\n  modifiers: [Modifier]!\n  value: Float!\n}\n\ntype BasicUser {\n  _id: ID!\n  username: String!\n  displayName: String!\n  dragons(day: Date, skip: Int, limit: Int, utcOffset: Int): [DragonFight]!\n  dragonOverviews(utcOffset: Int): [DragonOverview]!\n}\n\ntype User {\n  _id: ID!\n  minecraft: ID!\n  discord: ID!\n  username: String!\n  displayName: String!\n  eyePrice: Int!\n  dragons(day: Date, skip: Int, limit: Int, utcOffset: Int): [DragonFight]!\n  dragonOverviews(utcOffset: Int): [DragonOverview]!\n  notableSlayers(slayerType: SlayerType!, skip: Int, limit: Int): [SlayerTask!]!\n  slayerXp(slayerType: SlayerType!): Int!\n}\n\ntype Version {\n  _id: ID!\n  etag: ID!\n  version: String!\n  changes: [String!]!\n  download: String\n}\n\ntype Subscription {\n  dragonAdded(owner: ID): DragonFight!\n}\n\ntype Mutation {\n  initChallenge(uuid: ID!): AuthChallenge!\n  completeChallenge(token: String!): AuthResult!\n  setVersion(version: String!): SetVersionResult! @auth(requires: USER)\n  updateSettings(\n    displayName: String,\n    eyePrice: String,\n    username: String\n  ): User! @auth(requires: USER)\n  addDragon(\n    dragonType: DragonType!\n    rewards: [DragonRewardInput!]!\n    eyesPlaced: Int!\n    day: Int!\n    leaderboardPlacement: Int!\n  ): DragonFight! @auth(requires: USER)\n  addSlayer(\n    slayerType: SlayerType!\n    rewards: [SlayerRewardInput!]!\n    tier: Int!\n  ): SlayerTask! @auth(requires: USER)\n  addGolem(\n    rewards: [GolemRewardInput!]!\n    leaderboardPlacement: Int!\n  ): GolemFight!\n}\n\ntype Query {\n  currentUser: User @cacheControl(maxAge: 0) @auth(requires: USER)\n  users: [BasicUser]!\n  userById(id: ID!): BasicUser\n  userByName(username: String): BasicUser\n  dragons(skip: Int, limit: Int): [DragonFight]!\n  dragonItemProviders: [DragonItemProvider]! @auth(requires: USER)\n  slayerItemProviders: [SlayerItemProvider]! @auth(requires: USER)\n  golemItemProviders: [GolemItemProvider]! @auth(requires: USER)\n  itemProviders: [ItemProvider!]!\n  prices(type: PriceType!): [Price]!\n  dragonChances: [DragonChance]!\n  profits: [Profit]!\n  \"\"\"\n  A list of versions with changelogs\n  \"\"\"\n  versions: [Version!]!\n}";


console.log(definitions);var _default =
(0, _apolloServerExpress.gql)(definitions);exports.default = _default;